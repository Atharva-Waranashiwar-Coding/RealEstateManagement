/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.RealEstateAgency.Broker;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Ecosystem.Business;
import model.Employee.Broker;
import model.Property.Offer;
import model.Property.Property;
import model.Property.PropertyDirectory;

/**
 *
 * @author payaljadhav
 */
public class AddNewPropertyJPanel extends javax.swing.JPanel {

    JPanel brokerWorkArea;
    Business business;
    Broker broker;

    /**
     * Creates new form AddNewPropertyJPanel
     */
    public AddNewPropertyJPanel(JPanel brokerWorkArea, Broker broker, Business business) {
        this.brokerWorkArea = brokerWorkArea;
        this.broker = broker;
        this.business = business;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddressLine1 = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblZipcode = new javax.swing.JLabel();
        lblRate = new javax.swing.JLabel();
        lblTypeOfProperty = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtZipcode = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        txtTypeOfProperty = new javax.swing.JTextField();
        btnAddNewProperty = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        lblAddressLine1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAddressLine1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddressLine1.setText("Address line 1:");

        lblCity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCity.setText("City:");

        lblZipcode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblZipcode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblZipcode.setText("Zipcode:");

        lblRate.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRate.setText("Rate:");

        lblTypeOfProperty.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTypeOfProperty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTypeOfProperty.setText("Type of Property:");

        btnAddNewProperty.setText("Add");
        btnAddNewProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewPropertyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add New Property");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAddressLine1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(lblZipcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTypeOfProperty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddressLine1)
                    .addComponent(txtCity)
                    .addComponent(txtZipcode)
                    .addComponent(txtRate)
                    .addComponent(txtTypeOfProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(279, 279, 279))
            .addGroup(layout.createSequentialGroup()
                .addGap(352, 352, 352)
                .addComponent(btnAddNewProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(lblAddressLine1)
                        .addGap(26, 26, 26)
                        .addComponent(lblCity)
                        .addGap(26, 26, 26)
                        .addComponent(lblZipcode)
                        .addGap(28, 28, 28)
                        .addComponent(lblRate)
                        .addGap(21, 21, 21)
                        .addComponent(lblTypeOfProperty)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtTypeOfProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addComponent(btnAddNewProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewPropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewPropertyActionPerformed
        // TODO add your handling code here:        
        // Validate Address Line
        String addressLine = txtAddressLine1.getText().trim();
        if (addressLine.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Address Line", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate City
        String city = txtCity.getText().trim();
        if (city.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter City", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate Zipcode
        String zipcode = txtZipcode.getText().trim();
        if (zipcode.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Zipcode", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate Type of Property
        String type = txtTypeOfProperty.getText().trim();
        if (type.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Type of Property", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate Rate
        String rateText = txtRate.getText().trim();
        if (rateText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        // Assuming the rate should be a valid double value
        double rate=0.0;
        try {
             rate= Double.parseDouble(rateText);
            if (rate < 0) {
                JOptionPane.showMessageDialog(null, "Rate cannot be negative", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop further processing
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Generate ID based on the current size of the property list
        int index = broker.getPropertyList().size();
        String id = String.valueOf(index);

        // Create and add new property
        Property property = new Property(addressLine, city, zipcode, id, type, rate);
        broker.addNewProperty(property);
        this.business.getPropertyDirectory().addNewProperty(property);
        
        // Show success message
        JOptionPane.showMessageDialog(null, "Property with address: " + addressLine + " is successfully added", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        brokerWorkArea.removeAll();
        ViewPropertiesJPanel brokerProperties = new ViewPropertiesJPanel(brokerWorkArea,broker);
        brokerWorkArea.add("ViewPropertiesJPanel",brokerProperties);
        CardLayout layout = (CardLayout) brokerWorkArea.getLayout();
        layout.next(brokerWorkArea);

    }//GEN-LAST:event_btnAddNewPropertyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewProperty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddressLine1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblRate;
    private javax.swing.JLabel lblTypeOfProperty;
    private javax.swing.JLabel lblZipcode;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtTypeOfProperty;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables
}
