/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.RealEstateAgency.Broker;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Ecosystem.Business;
import model.Ecosystem.mailer.EmailUtil;
import model.Ecosystem.mailer.MessagesClass;
import model.Employee.Broker;
import model.Enterprise.RealEstateAgencyEnterprise;
import model.Property.Offer;
import model.Property.Property;

/**
 *
 * @author payaljadhav
 */
public class ViewCustomerOfferJPanel extends javax.swing.JPanel {

    JPanel brokerWorkArea;
    Business business;
    Broker broker;
    Offer offer;
    Property property;
    Offer selectedCustmerOffer;

    /**
     * Creates new form ViewCustomerOffer
     */
    public ViewCustomerOfferJPanel(JPanel brokerWorkArea, Broker broker) {
        this.brokerWorkArea = brokerWorkArea;
        this.broker = broker;
        initComponents();
        populateViewCustomerOffers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerOffers = new javax.swing.JTable();
        btnAcceptOffer = new javax.swing.JButton();
        btnRejectCustomerOffer = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        tblCustomerOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Viewer Detail", "Property", "Offer Rate", "Offer Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomerOffers);

        btnAcceptOffer.setText("Accept Offer");
        btnAcceptOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOfferActionPerformed(evt);
            }
        });

        btnRejectCustomerOffer.setText("Reject Offfer");
        btnRejectCustomerOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectCustomerOfferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(btnAcceptOffer)
                        .addGap(191, 191, 191)
                        .addComponent(btnRejectCustomerOffer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAcceptOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRejectCustomerOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOfferActionPerformed
        // TODO add your handling code here:
        int row = tblCustomerOffers.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Offer offer = (Offer) tblCustomerOffers.getValueAt(row, 0);
        
        updateOfferStatus("Accepted");
        String details = """
                         Property Name:  """ +offer.getProperty()+
                         """
                         \nBroker Email:  """ + this.broker.getUsername();
        
        EmailUtil emailUtil = new EmailUtil();
        MessagesClass messagesClass = new MessagesClass();
        emailUtil.sendEmailAlert(offer.getViewer().getUsername(),this.broker.getUsername(),messagesClass.getSubjectOfferStatus(),messagesClass.getAcceptOfferMessage()+"\n"+details);
    }//GEN-LAST:event_btnAcceptOfferActionPerformed

    private void btnRejectCustomerOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectCustomerOfferActionPerformed
        // TODO add your handling code here:
        int row = tblCustomerOffers.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Offer offer = (Offer) tblCustomerOffers.getValueAt(row, 0);
        
        updateOfferStatus("Declined");
        
        EmailUtil emailUtil = new EmailUtil();
        MessagesClass messagesClass = new MessagesClass();
        emailUtil.sendEmailAlert(offer.getViewer().getUsername(),this.broker.getUsername(),messagesClass.getSubjectOfferStatus(),messagesClass.getRejectOfferMessage());
    }//GEN-LAST:event_btnRejectCustomerOfferActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptOffer;
    private javax.swing.JButton btnRejectCustomerOffer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomerOffers;
    // End of variables declaration//GEN-END:variables

    private void populateViewCustomerOffers() {
        DefaultTableModel model = (DefaultTableModel) tblCustomerOffers.getModel();
        model.setRowCount(0);
        for (Property brokerProperty : broker.getPropertyList()) {
            for (Offer brokerOffer : brokerProperty.getPropertyOffers()) {
                Object row[] = new Object[4];
                row[0] = brokerOffer;
                row[1] = brokerOffer.getProperty();
                row[2] = brokerOffer.getOfferedRate();
                row[3] = brokerOffer.getStatus();
                model.addRow(row);
            }
        }

    }
    
    private void updateOfferStatus(String status){
        int customerOffeTableSize = tblCustomerOffers.getRowCount();
        int selectedrow = tblCustomerOffers.getSelectionModel().getLeadSelectionIndex();

        if (selectedrow < 0 || selectedrow > customerOffeTableSize - 1) {
            return;
        }
        selectedCustmerOffer = (Offer) tblCustomerOffers.getValueAt(selectedrow, 0);
        if (selectedCustmerOffer == null) {
            return;
        }
        selectedCustmerOffer.setStatus(status);
        populateViewCustomerOffers();
    }
}
