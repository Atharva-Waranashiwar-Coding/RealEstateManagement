/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.RealEstateAgency.Supervisor;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Ecosystem.Business;
import model.Employee.Broker;
import model.Property.Property;

/**
 *
 * @author payaljadhav
 */
public class UpdatePropertiesAgencyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePropertiesAgencyJPane
     */
    JPanel supervisorWorkArea;
    Property property;
    Business business;
    Broker broker;

    public UpdatePropertiesAgencyJPanel(JPanel supervisorWorkArea, Property property, Business business, Broker broker) {
        this.supervisorWorkArea = supervisorWorkArea;
        this.property = property;
        this.business = business;
        this.broker = broker;
        initComponents();
        populatePropertyDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtZipcode = new javax.swing.JTextField();
        txtRate = new javax.swing.JTextField();
        btnUpdateProperty = new javax.swing.JButton();
        cmbType = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setText("Address line 1:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("City:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Zipcode:");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel4.setText("Rate:");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel5.setText("Type:");

        txtRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRateActionPerformed(evt);
            }
        });

        btnUpdateProperty.setText("Update Property");
        btnUpdateProperty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePropertyActionPerformed(evt);
            }
        });

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rent ", "Sell" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(307, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtZipcode)
                            .addComponent(txtCity)
                            .addComponent(txtAddressLine1)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(275, 275, 275))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUpdateProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(357, 357, 357))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnUpdateProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRateActionPerformed

    private void btnUpdatePropertyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePropertyActionPerformed
        // TODO add your handling code here:
        // Validate Address Line
        String addressLine = txtAddressLine1.getText().trim();
        if (addressLine.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Address Line", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        property.setAddressLine(addressLine);

        // Validate City
        String city = txtCity.getText().trim();
        if (city.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter City", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        property.setCity(city);

        // Validate Zipcode
        String zipcode = txtZipcode.getText().trim();
        if (zipcode.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Zipcode", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        // Assuming the zipcode should be a numeric value
        try {
            property.setZipcode(zipcode);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric Zipcode", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate Rate
        String rateText = txtRate.getText().trim();
        if (rateText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        // Assuming the rate should be a valid double value
        try {
            double rate = Double.parseDouble(rateText);
            if (rate < 0) {
                JOptionPane.showMessageDialog(null, "Rate cannot be negative", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop further processing
            }
            property.setRate(rate);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Set Listing Type based on ComboBox selection
        if (cmbType.getSelectedIndex() == 0) {
            property.setListingType("Rent");
        } else if (cmbType.getSelectedIndex() == 1) {
            property.setListingType("Sell");
        } else {
            JOptionPane.showMessageDialog(null, "Please select Listing Type", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing if Listing Type is not selected
        }

        // Show success message
        JOptionPane.showMessageDialog(null, "Property is updated successfully. Check back the Property list", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear input fields
        txtAddressLine1.setText("");
        txtCity.setText("");
        txtZipcode.setText("");
        txtRate.setText("");
        cmbType.setSelectedIndex(0);

        
    }//GEN-LAST:event_btnUpdatePropertyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateProperty;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables

    private void populatePropertyDetails() {
        txtAddressLine1.setText(property.getAddressLine());
        txtCity.setText(property.getCity());
        txtZipcode.setText(property.getZipcode());
        txtRate.setText(String.valueOf(property.getRate()));
        if (property.getListingType().equals("Rent")) {
            cmbType.setSelectedIndex(0);
        } else if (property.getListingType().equals("Sell")) {
            cmbType.setSelectedIndex(1);
        }
    }
}
