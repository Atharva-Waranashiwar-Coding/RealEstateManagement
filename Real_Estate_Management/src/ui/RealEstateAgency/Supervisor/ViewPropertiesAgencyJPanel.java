/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.RealEstateAgency.Supervisor;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Ecosystem.Business;
import model.Employee.Broker;
import model.Employee.Supervisor;
import model.Enterprise.Enterprise;
import model.Enterprise.RealEstateAgencyEnterprise;
import model.Organisation.Organisation;
import model.Organisation.SupervisorOrganisation;
import model.Property.Offer;
import model.Property.Property;
import model.Property.PropertyDirectory;

/**
 *
 * @author payaljadhav
 */
public class ViewPropertiesAgencyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPropertiesAgencyJPanel
     */
    JPanel supervisorWorkArea;
    Supervisor supervisor;
    Business business;

    public ViewPropertiesAgencyJPanel(JPanel supervisorWorkArea, Supervisor supervisor, Business business) {
        this.supervisorWorkArea = supervisorWorkArea;
        this.supervisor = supervisor;
        this.business = business;
        initComponents();
        populateViewPropertiesTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewPropertiesAgency = new javax.swing.JTable();
        btnUpdatePropertyAgency = new javax.swing.JButton();
        btnDeletePropertyAgency = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        tblViewPropertiesAgency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Property Address", "Type ", "Rate", "Broker"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewPropertiesAgency);

        btnUpdatePropertyAgency.setText("Update Property");
        btnUpdatePropertyAgency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePropertyAgencyActionPerformed(evt);
            }
        });

        btnDeletePropertyAgency.setText("Delete Property");
        btnDeletePropertyAgency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePropertyAgencyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View All Properties");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(btnUpdatePropertyAgency, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153)
                        .addComponent(btnDeletePropertyAgency, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdatePropertyAgency, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletePropertyAgency, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdatePropertyAgencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePropertyAgencyActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewPropertiesAgency.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Property property = (Property) tblViewPropertiesAgency.getValueAt(selectedRow, 0);
            supervisorWorkArea.removeAll();
            Broker broker = (Broker) tblViewPropertiesAgency.getValueAt(selectedRow, 3);
            UpdatePropertiesAgencyJPanel updateProperty = new UpdatePropertiesAgencyJPanel(supervisorWorkArea, property, business, broker);
            supervisorWorkArea.add("UpdatePropertiesAgencyJpanel", updateProperty);
            CardLayout layout = (CardLayout) supervisorWorkArea.getLayout();
            layout.next(supervisorWorkArea);
        }

    }//GEN-LAST:event_btnUpdatePropertyAgencyActionPerformed

    private void btnDeletePropertyAgencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePropertyAgencyActionPerformed
        // TODO add your handling code here:
        int row = tblViewPropertiesAgency.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Property p = (Property) tblViewPropertiesAgency.getValueAt(row, 0);
        this.business.getPropertyDirectory().removeProperty(p);
        Broker b = (Broker) tblViewPropertiesAgency.getValueAt(row, 3);
        b.getPropertyList().remove(p);
        
        JOptionPane.showMessageDialog(null, "Property is deleted successfully.");

        populateViewPropertiesTbl();
    }//GEN-LAST:event_btnDeletePropertyAgencyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePropertyAgency;
    private javax.swing.JButton btnUpdatePropertyAgency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblViewPropertiesAgency;
    // End of variables declaration//GEN-END:variables

    private void populateViewPropertiesTbl() {
        DefaultTableModel model = (DefaultTableModel) tblViewPropertiesAgency.getModel();
        model.setRowCount(0);

        ArrayList<Property> allProperties = new ArrayList<>();
        ArrayList<Broker> allBroker = new ArrayList<>();
        for (Enterprise e : business.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof RealEstateAgencyEnterprise realEstateEnterprise) {
                for (Organisation org : realEstateEnterprise.getOrganisationDirectory().getOrganisationList()) {
                    if (org instanceof SupervisorOrganisation so) {
                        if (so.getEmployeeDirectory().getEmployeeList().contains(supervisor)) {
                            for (Broker b : realEstateEnterprise.getAllBrokers()) {
                                for (Property p : b.getPropertyList()) {
                                    Object row[] = new Object[4];
                                    row[0] = p;
                                    row[1] = p.getListingType();
                                    row[2] = p.getRate();
                                    row[3] = b; //broker
                                    model.addRow(row);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
