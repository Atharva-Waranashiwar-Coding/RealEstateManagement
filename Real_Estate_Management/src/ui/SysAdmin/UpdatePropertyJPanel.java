/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.SysAdmin;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Ecosystem.Business;
import model.Property.Property;

/**
 *
 * @author Admin
 */
public class UpdatePropertyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePropertyJPanel
     */
    JPanel sysAdminWorkarea;
    Business business;
    Property property;
    public UpdatePropertyJPanel(JPanel sysAdminWorkarea, Business business, Property property) {
        initComponents();
        this.sysAdminWorkarea = sysAdminWorkarea;
        this.property=property;
        this.business = business;
        txtAddressLine1.setText(property.getAddressLine());
        txtCity.setText(property.getCity());
        txtRate.setText(String.valueOf(property.getRate()));
        txtTypeOfProperty.setText(property.getListingType());
        txtZipcode.setText(property.getZipcode());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddressLine1 = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblZipcode = new javax.swing.JLabel();
        txtZipcode = new javax.swing.JTextField();
        lblRate = new javax.swing.JLabel();
        txtRate = new javax.swing.JTextField();
        lblTypeOfProperty = new javax.swing.JLabel();
        txtTypeOfProperty = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        lblAddressLine1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAddressLine1.setText("Address line 1:");

        lblCity.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblCity.setText("City:");

        lblZipcode.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblZipcode.setText("Zipcode:");

        lblRate.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblRate.setText("Rate:");

        lblTypeOfProperty.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTypeOfProperty.setText("Type of Property(Rent/Sell):   ");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Update Property");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTypeOfProperty)
                            .addComponent(lblRate, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtZipcode, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(txtRate, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(txtTypeOfProperty, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(288, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddressLine1, txtCity, txtRate, txtTypeOfProperty, txtZipcode});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddressLine1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipcode)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRate)
                    .addComponent(txtRate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTypeOfProperty)
                    .addComponent(txtTypeOfProperty, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtAddressLine1, txtCity, txtRate, txtTypeOfProperty, txtZipcode});

    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        sysAdminWorkarea.remove(this);
        CardLayout layout = (CardLayout)sysAdminWorkarea.getLayout();
        layout.previous(sysAdminWorkarea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // Validate Address Line 1
        String addressLine1 = txtAddressLine1.getText().trim();
        if (addressLine1.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Address Line 1", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        this.property.setAddressLine(addressLine1);

        // Validate City
        String city = txtCity.getText().trim();
        if (city.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter City", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        this.property.setCity(city);

        // Validate Zipcode
        String zipcode = txtZipcode.getText().trim();
        if (zipcode.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Zipcode", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        // Assuming the zipcode should be a numeric value
        try {
            this.property.setZipcode(zipcode);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric Zipcode", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }

        // Validate Listing Type
        String listingType = txtTypeOfProperty.getText().trim();
        if (listingType.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Listing Type", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        this.property.setListingType(listingType);

        // Validate Rate
        String rateText = txtRate.getText().trim();
        if (rateText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        // Assuming the rate should be a valid double value
        try {
            double rate = Double.parseDouble(rateText);
            if (rate < 0) {
                JOptionPane.showMessageDialog(null, "Rate cannot be negative", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Stop further processing
            }
            this.property.setRate(rate);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric Rate", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Stop further processing
        }
        sysAdminWorkarea.removeAll();
        SysAdminPropertiesJPanel property = new SysAdminPropertiesJPanel(sysAdminWorkarea,business);
        property.populateTable();
        sysAdminWorkarea.add("SysAdminPropertiesJPanel",property);
        CardLayout layout = (CardLayout) sysAdminWorkarea.getLayout();
        layout.next(sysAdminWorkarea);
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAddressLine1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblRate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTypeOfProperty;
    private javax.swing.JLabel lblZipcode;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtRate;
    private javax.swing.JTextField txtTypeOfProperty;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables
}
